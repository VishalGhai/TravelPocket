{"ast":null,"code":"// Note: In a real application, you would need to get your API key from environment variables\n// For now, we'll use a placeholder that should be replaced with your actual Gemini API key\nconst GEMINI_API_KEY = process.env.REACT_APP_GEMINI_API_KEY || 'your-gemini-api-key-here';\nconst GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent';\n\n// Helper function to show user-friendly alerts\nconst showErrorAlert = errorType => {\n  if (typeof window !== 'undefined') {\n    switch (errorType) {\n      case 'LLM_SERVICE_UNAVAILABLE':\n        alert('🚫 LLM Service Unavailable\\n\\nThe AI service is currently overloaded and not available. Please try again in a few minutes.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      case 'LLM_RATE_LIMIT_EXCEEDED':\n        alert('⏰ Rate Limit Exceeded\\n\\nYou\\'ve made too many requests. Please wait a moment before trying again.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      case 'LLM_API_KEY_INVALID':\n        alert('🔑 API Key Issue\\n\\nThere\\'s an issue with the API configuration. Please check your API key.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      case 'REQUEST_TIMEOUT':\n        alert('⏱️ Request Timeout\\n\\nThe API request took too long to respond. This might be due to high server load.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      default:\n        alert('❌ Error Generating Itinerary\\n\\nSomething went wrong while generating your itinerary. Please try again.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n    }\n  }\n};\n\n// Helper function to implement exponential backoff retry logic\nconst retryWithBackoff = async (fn, maxRetries = 3, baseDelay = 1000) => {\n  for (let attempt = 0; attempt < maxRetries; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      // Only retry on service unavailable errors\n      if (error.message === 'LLM_SERVICE_UNAVAILABLE' && attempt < maxRetries - 1) {\n        const delay = baseDelay * Math.pow(2, attempt);\n        console.log(`Service unavailable, retrying in ${delay}ms... (attempt ${attempt + 1}/${maxRetries})`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        continue;\n      }\n      throw error;\n    }\n  }\n};\n\n// Helper function to validate API key\nconst validateApiKey = () => {\n  if (!GEMINI_API_KEY || GEMINI_API_KEY === 'your-gemini-api-key-here') {\n    throw new Error('LLM_API_KEY_INVALID');\n  }\n  return true;\n};\n\n// Helper function to create a timeout promise\nconst createTimeoutPromise = timeoutMs => {\n  return new Promise((_, reject) => {\n    setTimeout(() => reject(new Error('Request timeout')), timeoutMs);\n  });\n};\n\n// Helper function to make API request with timeout\nconst makeApiRequest = async (url, options, timeoutMs = 30000) => {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n  try {\n    const response = await fetch(url, {\n      ...options,\n      signal: controller.signal\n    });\n    clearTimeout(timeoutId);\n    return response;\n  } catch (error) {\n    clearTimeout(timeoutId);\n    if (error.name === 'AbortError') {\n      throw new Error('Request timeout - API took too long to respond');\n    }\n    throw error;\n  }\n};\n\n// Test function to debug API response\nexport const testGeminiAPI = async () => {\n  try {\n    // Validate API key first\n    validateApiKey();\n    const response = await makeApiRequest(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        contents: [{\n          parts: [{\n            text: \"Hello, please respond with a simple JSON object: {\\\"message\\\": \\\"Hello World\\\"}\"\n          }]\n        }],\n        generationConfig: {\n          temperature: 0.3,\n          maxOutputTokens: 100\n        }\n      })\n    }, 15000); // 15 second timeout for test\n\n    console.log('Test API Response Status:', response.status);\n    const data = await response.json();\n    console.log('Test API Response Data:', JSON.stringify(data, null, 2));\n    return data;\n  } catch (error) {\n    console.error('Test API Error:', error);\n    return null;\n  }\n};\nexport const generateItinerary = async travelData => {\n  const {\n    place,\n    motive,\n    budget,\n    currency,\n    includeTravelCost,\n    numberOfMembers,\n    numberOfDays\n  } = travelData;\n  try {\n    // Validate API key first\n    validateApiKey();\n    const prompt = `Create a travel itinerary for ${numberOfMembers} person(s) visiting ${place} for ${numberOfDays} day(s). Motive: ${motive}. Budget: ${budget} ${currency}${includeTravelCost ? ' (inc. travel)' : ' (exc. travel)'}.\n\nGenerate 20-25 activities for ${place} (sightseeing, tours, experiences only - no food/accommodation/transport in activities array).\n\nRequirements:\n- All prices in ${currency}\n- Focus on famous ${motive} activities for ${place}\n- Keep descriptions brief (1-2 sentences)\n- Response under 4000 tokens\n\nReturn ONLY this JSON structure:\n{\n  \"itinerary\": {\"days\": [{\"day\": 1, \"date\": \"2024-01-01\", \"activities\": [{\"time\": \"09:00\", \"activity\": \"Activity\", \"place\": \"Location\", \"description\": \"Brief description\", \"costPerPerson\": 50, \"category\": \"activities\"}]}]},\n  \"activities\": [{\"id\": \"1\", \"name\": \"Activity\", \"place\": \"Location\", \"description\": \"Brief description\", \"costPerPerson\": 50, \"category\": \"activities\", \"duration\": \"2h\", \"bestTime\": \"morning\"}],\n  \"budgetBreakdown\": {\n    \"food\": {\"total\": 200, \"items\": [{\"name\": \"Restaurant\", \"place\": \"Location\", \"costPerPerson\": 25, \"description\": \"Meal\"}]},\n    \"travel\": {\"total\": 300, \"items\": [{\"name\": \"Transport\", \"place\": \"Route\", \"costPerPerson\": 50, \"description\": \"Transport\"}]},\n    \"accommodation\": {\"total\": 400, \"items\": [{\"name\": \"Hotel\", \"place\": \"Location\", \"costPerPerson\": 100, \"description\": \"Accommodation\"}]},\n    \"other\": {\"total\": 50, \"items\": [{\"name\": \"Item\", \"place\": \"Location\", \"costPerPerson\": 25, \"description\": \"Item\"}]}\n  },\n  \"totalEstimatedCost\": 1100\n}`;\n\n    // Wrap the API call with retry logic\n    const apiCall = async () => {\n      const response = await makeApiRequest(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }],\n          generationConfig: {\n            temperature: 0.3,\n            // Lower temperature for more focused responses\n            topK: 20,\n            // Reduced for faster generation\n            topP: 0.8,\n            // Reduced for faster generation\n            maxOutputTokens: 8192,\n            // Reduced from 32768 for faster response\n            candidateCount: 1 // Only generate one response\n          }\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Gemini API Error Details:', {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorData\n        });\n\n        // Handle specific error cases\n        if (response.status === 503) {\n          throw new Error('LLM_SERVICE_UNAVAILABLE');\n        } else if (response.status === 429) {\n          throw new Error('LLM_RATE_LIMIT_EXCEEDED');\n        } else if (response.status === 401) {\n          throw new Error('LLM_API_KEY_INVALID');\n        } else {\n          throw new Error(`API request failed: ${response.status} ${response.statusText}`);\n        }\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const data = await retryWithBackoff(apiCall);\n\n      // Log the full response to debug the structure\n      console.log('Full API Response:', JSON.stringify(data, null, 2));\n\n      // Check if there's an error in the response\n      if (data.error) {\n        console.error('API returned an error:', data.error);\n        throw new Error(`API Error: ${data.error.message || 'Unknown error'}`);\n      }\n      if (!data.candidates || !data.candidates[0]) {\n        console.error('No candidates in response:', data);\n        throw new Error('Invalid response format from Gemini API - no candidates');\n      }\n\n      // Check if response was truncated due to token limit\n      if (data.candidates[0].finishReason === 'MAX_TOKENS') {\n        console.warn('Response was truncated due to MAX_TOKENS limit. Using mock data instead.');\n        return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n      }\n\n      // Check if response was stopped for other reasons\n      if (data.candidates[0].finishReason && data.candidates[0].finishReason !== 'STOP') {\n        console.warn(`Response finished with reason: ${data.candidates[0].finishReason}. Using mock data instead.`);\n        return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n      }\n      if (!data.candidates[0].content) {\n        console.error('No content in first candidate:', data.candidates[0]);\n        throw new Error('Invalid response format from Gemini API - no content');\n      }\n      if (!data.candidates[0].content.parts || !data.candidates[0].content.parts[0]) {\n        console.error('No parts in content:', data.candidates[0].content);\n        throw new Error('Invalid response format from Gemini API - no parts');\n      }\n      const responseText = data.candidates[0].content.parts[0].text;\n      console.log('Response text:', responseText);\n      console.log('Response text length:', responseText.length);\n\n      // Try to parse the JSON response\n      try {\n        const jsonMatch = responseText.match(/\\{[\\s\\S]*\\}/);\n        if (jsonMatch) {\n          const parsedData = JSON.parse(jsonMatch[0]);\n          console.log('Successfully parsed JSON response');\n          console.log('Number of activities in response:', parsedData.activities ? parsedData.activities.length : 'No activities array');\n          console.log('Activities:', parsedData.activities);\n          return parsedData;\n        } else {\n          console.error('No JSON found in response text');\n          throw new Error('No JSON found in response');\n        }\n      } catch (parseError) {\n        console.error('Failed to parse JSON response:', parseError);\n        console.error('Raw response text:', responseText);\n        throw new Error('Failed to parse API response as JSON');\n      }\n    } catch (error) {\n      console.error('Error calling Gemini API:', error);\n\n      // Handle specific error types\n      if (error.message === 'LLM_SERVICE_UNAVAILABLE') {\n        throw new Error('LLM_SERVICE_UNAVAILABLE');\n      } else if (error.message === 'LLM_RATE_LIMIT_EXCEEDED') {\n        throw new Error('LLM_RATE_LIMIT_EXCEEDED');\n      } else if (error.message === 'LLM_API_KEY_INVALID') {\n        throw new Error('LLM_API_KEY_INVALID');\n      } else if (error.message.includes('timeout') || error.message.includes('Request timeout')) {\n        throw new Error('REQUEST_TIMEOUT');\n      } else {\n        // For other errors, fall back to mock data\n        console.warn('Falling back to mock data due to API error:', error.message);\n        return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n      }\n    }\n  } catch (error) {\n    // Handle specific error types - show alert but still provide mock data\n    if (error.message === 'LLM_SERVICE_UNAVAILABLE') {\n      console.warn('LLM service unavailable, using mock data');\n      showErrorAlert('LLM_SERVICE_UNAVAILABLE');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else if (error.message === 'LLM_RATE_LIMIT_EXCEEDED') {\n      console.warn('Rate limit exceeded, using mock data');\n      showErrorAlert('LLM_RATE_LIMIT_EXCEEDED');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else if (error.message === 'LLM_API_KEY_INVALID') {\n      console.warn('API key invalid, using mock data');\n      showErrorAlert('LLM_API_KEY_INVALID');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else if (error.message === 'REQUEST_TIMEOUT') {\n      console.warn('Request timeout, using mock data');\n      showErrorAlert('REQUEST_TIMEOUT');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else {\n      // For other errors, fall back to mock data\n      console.warn('Falling back to mock data due to unexpected error:', error.message);\n      showErrorAlert('GENERAL_ERROR');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    }\n  }\n};\n\n// Mock response generator for development/testing\nconst generateMockResponse = (place, motive, budget, currency, numberOfMembers, numberOfDays) => {\n  const mockActivities = [{\n    id: '1',\n    name: 'City Walking Tour',\n    place: `${place} Historic Center`,\n    description: 'Explore the historic landmarks and cultural sites',\n    costPerPerson: 25,\n    category: 'activities',\n    duration: '3 hours',\n    bestTime: 'morning'\n  }, {\n    id: '2',\n    name: 'Museum Visit',\n    place: 'National Museum',\n    description: 'Learn about local history and culture',\n    costPerPerson: 15,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '3',\n    name: 'Scenic Viewpoint',\n    place: 'Mountain Lookout',\n    description: 'Enjoy panoramic views of the city',\n    costPerPerson: 10,\n    category: 'activities',\n    duration: '1 hour',\n    bestTime: 'evening'\n  }, {\n    id: '4',\n    name: 'Art Gallery Tour',\n    place: 'Modern Art Gallery',\n    description: 'Discover contemporary local and international art',\n    costPerPerson: 20,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '5',\n    name: 'Cultural Workshop',\n    place: 'Art Center',\n    description: 'Learn traditional crafts and techniques',\n    costPerPerson: 45,\n    category: 'activities',\n    duration: '3 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '6',\n    name: 'Nature Hike',\n    place: 'National Park',\n    description: 'Explore natural trails and observe local wildlife',\n    costPerPerson: 30,\n    category: 'activities',\n    duration: '4 hours',\n    bestTime: 'morning'\n  }, {\n    id: '7',\n    name: 'Boat Tour',\n    place: 'City Harbor',\n    description: 'Scenic boat ride with city skyline views',\n    costPerPerson: 35,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '8',\n    name: 'Cooking Class',\n    place: 'Culinary School',\n    description: 'Learn to prepare authentic local dishes',\n    costPerPerson: 60,\n    category: 'activities',\n    duration: '3 hours',\n    bestTime: 'morning'\n  }, {\n    id: '9',\n    name: 'Photography Tour',\n    place: 'Historic District',\n    description: 'Capture the best shots with a professional guide',\n    costPerPerson: 40,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'evening'\n  }, {\n    id: '10',\n    name: 'Wine Tasting',\n    place: 'Local Winery',\n    description: 'Sample regional wines and learn about local viticulture',\n    costPerPerson: 50,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '11',\n    name: 'Architecture Tour',\n    place: 'Downtown District',\n    description: 'Explore iconic buildings and architectural styles',\n    costPerPerson: 25,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'morning'\n  }, {\n    id: '12',\n    name: 'Music Performance',\n    place: 'Concert Hall',\n    description: 'Attend a classical or traditional music concert',\n    costPerPerson: 40,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'evening'\n  }, {\n    id: '13',\n    name: 'Market Tour',\n    place: 'Local Market',\n    description: 'Explore local markets and taste regional specialties',\n    costPerPerson: 20,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'morning'\n  }, {\n    id: '14',\n    name: 'Bike Tour',\n    place: 'City Streets',\n    description: 'Cycling tour through scenic neighborhoods',\n    costPerPerson: 30,\n    category: 'activities',\n    duration: '3 hours',\n    bestTime: 'morning'\n  }, {\n    id: '15',\n    name: 'Theater Show',\n    place: 'Historic Theater',\n    description: 'Watch a local theater production or musical',\n    costPerPerson: 35,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'evening'\n  }, {\n    id: '16',\n    name: 'Garden Tour',\n    place: 'Botanical Gardens',\n    description: 'Explore beautiful gardens and exotic plants',\n    costPerPerson: 15,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '17',\n    name: 'Nightlife Tour',\n    place: 'Entertainment District',\n    description: 'Experience the local nightlife and bars',\n    costPerPerson: 45,\n    category: 'activities',\n    duration: '3 hours',\n    bestTime: 'evening'\n  }, {\n    id: '18',\n    name: 'Adventure Park',\n    place: 'Outdoor Adventure Center',\n    description: 'Try zip-lining, rock climbing, and outdoor activities',\n    costPerPerson: 55,\n    category: 'activities',\n    duration: '4 hours',\n    bestTime: 'morning'\n  }, {\n    id: '19',\n    name: 'Historical Site Visit',\n    place: 'Ancient Ruins',\n    description: 'Explore historical monuments and archaeological sites',\n    costPerPerson: 20,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'morning'\n  }, {\n    id: '20',\n    name: 'Spa Experience',\n    place: 'Luxury Spa',\n    description: 'Relax with traditional treatments and massages',\n    costPerPerson: 80,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '21',\n    name: 'Food Market Tour',\n    place: 'Local Market',\n    description: 'Explore local cuisine and food culture',\n    costPerPerson: 35,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'morning'\n  }, {\n    id: '22',\n    name: 'Photography Walk',\n    place: 'Scenic Routes',\n    description: 'Capture the best photo spots with a guide',\n    costPerPerson: 40,\n    category: 'activities',\n    duration: '3 hours',\n    bestTime: 'evening'\n  }, {\n    id: '23',\n    name: 'Local Festival',\n    place: 'Town Square',\n    description: 'Experience traditional celebrations and events',\n    costPerPerson: 15,\n    category: 'activities',\n    duration: '4 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '24',\n    name: 'Wine Tasting',\n    place: 'Vineyard',\n    description: 'Sample local wines and learn about production',\n    costPerPerson: 60,\n    category: 'activities',\n    duration: '2 hours',\n    bestTime: 'afternoon'\n  }, {\n    id: '25',\n    name: 'Hiking Trail',\n    place: 'Nature Reserve',\n    description: 'Explore scenic hiking paths and nature',\n    costPerPerson: 25,\n    category: 'activities',\n    duration: '4 hours',\n    bestTime: 'morning'\n  }];\n  const budgetAmount = parseInt(budget) || 1000;\n  const budgetBreakdown = {\n    food: {\n      total: Math.floor(budgetAmount * 0.3),\n      items: [{\n        name: \"Local Restaurant\",\n        place: \"Downtown\",\n        costPerPerson: Math.floor(budgetAmount * 0.15),\n        description: \"Traditional local cuisine\"\n      }, {\n        name: \"Street Food\",\n        place: \"Market Area\",\n        costPerPerson: Math.floor(budgetAmount * 0.1),\n        description: \"Authentic street food experience\"\n      }, {\n        name: \"Café\",\n        place: \"City Center\",\n        costPerPerson: Math.floor(budgetAmount * 0.05),\n        description: \"Coffee and light meals\"\n      }]\n    },\n    travel: {\n      total: Math.floor(budgetAmount * 0.25),\n      items: [{\n        name: \"Airport Transfer\",\n        place: \"Airport to Hotel\",\n        costPerPerson: Math.floor(budgetAmount * 0.1),\n        description: \"Taxi or shuttle service\"\n      }, {\n        name: \"Local Transport\",\n        place: \"City\",\n        costPerPerson: Math.floor(budgetAmount * 0.1),\n        description: \"Public transport and taxis\"\n      }, {\n        name: \"Intercity Travel\",\n        place: \"Between cities\",\n        costPerPerson: Math.floor(budgetAmount * 0.05),\n        description: \"Train or bus tickets\"\n      }]\n    },\n    accommodation: {\n      total: Math.floor(budgetAmount * 0.2),\n      items: [{\n        name: \"Hotel\",\n        place: \"City Center\",\n        costPerPerson: Math.floor(budgetAmount * 0.2),\n        description: \"Comfortable accommodation\"\n      }]\n    },\n    other: {\n      total: Math.floor(budgetAmount * 0.05),\n      items: [{\n        name: \"Souvenirs\",\n        place: \"Local Shops\",\n        costPerPerson: Math.floor(budgetAmount * 0.03),\n        description: \"Memorabilia and gifts\"\n      }, {\n        name: \"Miscellaneous\",\n        place: \"Various\",\n        costPerPerson: Math.floor(budgetAmount * 0.02),\n        description: \"Unexpected expenses\"\n      }]\n    }\n  };\n\n  // Adjust activity prices based on currency (rough conversion for demo)\n  const getCurrencyMultiplier = curr => {\n    const multipliers = {\n      'USD': 1.0,\n      'EUR': 0.85,\n      'GBP': 0.75,\n      'JPY': 110,\n      'INR': 75,\n      'CAD': 1.25,\n      'AUD': 1.35\n    };\n    return multipliers[curr] || 1.0;\n  };\n  const currencyMultiplier = getCurrencyMultiplier(currency);\n  const adjustedActivities = mockActivities.map(activity => ({\n    ...activity,\n    costPerPerson: Math.round(activity.costPerPerson * currencyMultiplier)\n  }));\n\n  // Generate days based on numberOfDays\n  const generateDays = () => {\n    const days = [];\n    for (let i = 1; i <= numberOfDays; i++) {\n      const date = new Date(Date.now() + (i - 1) * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n      const activitiesPerDay = Math.ceil(adjustedActivities.length / numberOfDays);\n      const startIndex = (i - 1) * activitiesPerDay;\n      const endIndex = Math.min(startIndex + activitiesPerDay, adjustedActivities.length);\n      days.push({\n        day: i,\n        date: date,\n        activities: adjustedActivities.slice(startIndex, endIndex).map(activity => ({\n          time: '09:00',\n          activity: activity.name,\n          place: activity.place,\n          description: activity.description,\n          costPerPerson: activity.costPerPerson,\n          category: activity.category\n        }))\n      });\n    }\n    return days;\n  };\n  return {\n    itinerary: {\n      days: generateDays()\n    },\n    activities: adjustedActivities,\n    budgetBreakdown,\n    totalEstimatedCost: budgetAmount\n  };\n};","map":{"version":3,"names":["GEMINI_API_KEY","process","env","REACT_APP_GEMINI_API_KEY","GEMINI_API_URL","showErrorAlert","errorType","window","alert","retryWithBackoff","fn","maxRetries","baseDelay","attempt","error","message","delay","Math","pow","console","log","Promise","resolve","setTimeout","validateApiKey","Error","createTimeoutPromise","timeoutMs","_","reject","makeApiRequest","url","options","controller","AbortController","timeoutId","abort","response","fetch","signal","clearTimeout","name","testGeminiAPI","method","headers","body","JSON","stringify","contents","parts","text","generationConfig","temperature","maxOutputTokens","status","data","json","generateItinerary","travelData","place","motive","budget","currency","includeTravelCost","numberOfMembers","numberOfDays","prompt","apiCall","topK","topP","candidateCount","ok","errorData","catch","statusText","candidates","finishReason","warn","generateMockResponse","content","responseText","length","jsonMatch","match","parsedData","parse","activities","parseError","includes","mockActivities","id","description","costPerPerson","category","duration","bestTime","budgetAmount","parseInt","budgetBreakdown","food","total","floor","items","travel","accommodation","other","getCurrencyMultiplier","curr","multipliers","currencyMultiplier","adjustedActivities","map","activity","round","generateDays","days","i","date","Date","now","toISOString","split","activitiesPerDay","ceil","startIndex","endIndex","min","push","day","slice","time","itinerary","totalEstimatedCost"],"sources":["/Users/vishalghai/Downloads/TravelPocket/src/services/geminiApi.js"],"sourcesContent":["// Note: In a real application, you would need to get your API key from environment variables\n// For now, we'll use a placeholder that should be replaced with your actual Gemini API key\nconst GEMINI_API_KEY = process.env.REACT_APP_GEMINI_API_KEY || 'your-gemini-api-key-here';\nconst GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent';\n\n// Helper function to show user-friendly alerts\nconst showErrorAlert = (errorType) => {\n  if (typeof window !== 'undefined') {\n    switch (errorType) {\n      case 'LLM_SERVICE_UNAVAILABLE':\n        alert('🚫 LLM Service Unavailable\\n\\nThe AI service is currently overloaded and not available. Please try again in a few minutes.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      case 'LLM_RATE_LIMIT_EXCEEDED':\n        alert('⏰ Rate Limit Exceeded\\n\\nYou\\'ve made too many requests. Please wait a moment before trying again.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      case 'LLM_API_KEY_INVALID':\n        alert('🔑 API Key Issue\\n\\nThere\\'s an issue with the API configuration. Please check your API key.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      case 'REQUEST_TIMEOUT':\n        alert('⏱️ Request Timeout\\n\\nThe API request took too long to respond. This might be due to high server load.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n        break;\n      default:\n        alert('❌ Error Generating Itinerary\\n\\nSomething went wrong while generating your itinerary. Please try again.\\n\\nWe\\'re using sample data for now so you can still explore the app!');\n    }\n  }\n};\n\n// Helper function to implement exponential backoff retry logic\nconst retryWithBackoff = async (fn, maxRetries = 3, baseDelay = 1000) => {\n  for (let attempt = 0; attempt < maxRetries; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      // Only retry on service unavailable errors\n      if (error.message === 'LLM_SERVICE_UNAVAILABLE' && attempt < maxRetries - 1) {\n        const delay = baseDelay * Math.pow(2, attempt);\n        console.log(`Service unavailable, retrying in ${delay}ms... (attempt ${attempt + 1}/${maxRetries})`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        continue;\n      }\n      throw error;\n    }\n  }\n};\n\n// Helper function to validate API key\nconst validateApiKey = () => {\n  if (!GEMINI_API_KEY || GEMINI_API_KEY === 'your-gemini-api-key-here') {\n    throw new Error('LLM_API_KEY_INVALID');\n  }\n  return true;\n};\n\n// Helper function to create a timeout promise\nconst createTimeoutPromise = (timeoutMs) => {\n  return new Promise((_, reject) => {\n    setTimeout(() => reject(new Error('Request timeout')), timeoutMs);\n  });\n};\n\n// Helper function to make API request with timeout\nconst makeApiRequest = async (url, options, timeoutMs = 30000) => {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n  \n  try {\n    const response = await fetch(url, {\n      ...options,\n      signal: controller.signal\n    });\n    clearTimeout(timeoutId);\n    return response;\n  } catch (error) {\n    clearTimeout(timeoutId);\n    if (error.name === 'AbortError') {\n      throw new Error('Request timeout - API took too long to respond');\n    }\n    throw error;\n  }\n};\n\n// Test function to debug API response\nexport const testGeminiAPI = async () => {\n  try {\n    // Validate API key first\n    validateApiKey();\n    \n    const response = await makeApiRequest(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [{\n          parts: [{\n            text: \"Hello, please respond with a simple JSON object: {\\\"message\\\": \\\"Hello World\\\"}\"\n          }]\n        }],\n        generationConfig: {\n          temperature: 0.3,\n          maxOutputTokens: 100,\n        }\n      })\n    }, 15000); // 15 second timeout for test\n\n    console.log('Test API Response Status:', response.status);\n    const data = await response.json();\n    console.log('Test API Response Data:', JSON.stringify(data, null, 2));\n    return data;\n  } catch (error) {\n    console.error('Test API Error:', error);\n    return null;\n  }\n};\n\nexport const generateItinerary = async (travelData) => {\n  const { place, motive, budget, currency, includeTravelCost, numberOfMembers, numberOfDays } = travelData;\n  \n  try {\n    // Validate API key first\n    validateApiKey();\n  \n  const prompt = `Create a travel itinerary for ${numberOfMembers} person(s) visiting ${place} for ${numberOfDays} day(s). Motive: ${motive}. Budget: ${budget} ${currency}${includeTravelCost ? ' (inc. travel)' : ' (exc. travel)'}.\n\nGenerate 20-25 activities for ${place} (sightseeing, tours, experiences only - no food/accommodation/transport in activities array).\n\nRequirements:\n- All prices in ${currency}\n- Focus on famous ${motive} activities for ${place}\n- Keep descriptions brief (1-2 sentences)\n- Response under 4000 tokens\n\nReturn ONLY this JSON structure:\n{\n  \"itinerary\": {\"days\": [{\"day\": 1, \"date\": \"2024-01-01\", \"activities\": [{\"time\": \"09:00\", \"activity\": \"Activity\", \"place\": \"Location\", \"description\": \"Brief description\", \"costPerPerson\": 50, \"category\": \"activities\"}]}]},\n  \"activities\": [{\"id\": \"1\", \"name\": \"Activity\", \"place\": \"Location\", \"description\": \"Brief description\", \"costPerPerson\": 50, \"category\": \"activities\", \"duration\": \"2h\", \"bestTime\": \"morning\"}],\n  \"budgetBreakdown\": {\n    \"food\": {\"total\": 200, \"items\": [{\"name\": \"Restaurant\", \"place\": \"Location\", \"costPerPerson\": 25, \"description\": \"Meal\"}]},\n    \"travel\": {\"total\": 300, \"items\": [{\"name\": \"Transport\", \"place\": \"Route\", \"costPerPerson\": 50, \"description\": \"Transport\"}]},\n    \"accommodation\": {\"total\": 400, \"items\": [{\"name\": \"Hotel\", \"place\": \"Location\", \"costPerPerson\": 100, \"description\": \"Accommodation\"}]},\n    \"other\": {\"total\": 50, \"items\": [{\"name\": \"Item\", \"place\": \"Location\", \"costPerPerson\": 25, \"description\": \"Item\"}]}\n  },\n  \"totalEstimatedCost\": 1100\n}`;\n\n  // Wrap the API call with retry logic\n  const apiCall = async () => {\n    const response = await makeApiRequest(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [{\n          parts: [{\n            text: prompt\n          }]\n        }],\n        generationConfig: {\n          temperature: 0.3,        // Lower temperature for more focused responses\n          topK: 20,               // Reduced for faster generation\n          topP: 0.8,              // Reduced for faster generation\n          maxOutputTokens: 8192,  // Reduced from 32768 for faster response\n          candidateCount: 1,      // Only generate one response\n        }\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      console.error('Gemini API Error Details:', {\n        status: response.status,\n        statusText: response.statusText,\n        error: errorData\n      });\n      \n      // Handle specific error cases\n      if (response.status === 503) {\n        throw new Error('LLM_SERVICE_UNAVAILABLE');\n      } else if (response.status === 429) {\n        throw new Error('LLM_RATE_LIMIT_EXCEEDED');\n      } else if (response.status === 401) {\n        throw new Error('LLM_API_KEY_INVALID');\n      } else {\n        throw new Error(`API request failed: ${response.status} ${response.statusText}`);\n      }\n    }\n\n    const data = await response.json();\n    return data;\n  };\n\n  try {\n    const data = await retryWithBackoff(apiCall);\n    \n    // Log the full response to debug the structure\n    console.log('Full API Response:', JSON.stringify(data, null, 2));\n    \n    // Check if there's an error in the response\n    if (data.error) {\n      console.error('API returned an error:', data.error);\n      throw new Error(`API Error: ${data.error.message || 'Unknown error'}`);\n    }\n    \n    if (!data.candidates || !data.candidates[0]) {\n      console.error('No candidates in response:', data);\n      throw new Error('Invalid response format from Gemini API - no candidates');\n    }\n    \n    // Check if response was truncated due to token limit\n    if (data.candidates[0].finishReason === 'MAX_TOKENS') {\n      console.warn('Response was truncated due to MAX_TOKENS limit. Using mock data instead.');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    }\n    \n    // Check if response was stopped for other reasons\n    if (data.candidates[0].finishReason && data.candidates[0].finishReason !== 'STOP') {\n      console.warn(`Response finished with reason: ${data.candidates[0].finishReason}. Using mock data instead.`);\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    }\n    \n    if (!data.candidates[0].content) {\n      console.error('No content in first candidate:', data.candidates[0]);\n      throw new Error('Invalid response format from Gemini API - no content');\n    }\n    \n    if (!data.candidates[0].content.parts || !data.candidates[0].content.parts[0]) {\n      console.error('No parts in content:', data.candidates[0].content);\n      throw new Error('Invalid response format from Gemini API - no parts');\n    }\n\n    const responseText = data.candidates[0].content.parts[0].text;\n    \n    console.log('Response text:', responseText);\n    console.log('Response text length:', responseText.length);\n    \n    // Try to parse the JSON response\n    try {\n      const jsonMatch = responseText.match(/\\{[\\s\\S]*\\}/);\n      if (jsonMatch) {\n        const parsedData = JSON.parse(jsonMatch[0]);\n        console.log('Successfully parsed JSON response');\n        console.log('Number of activities in response:', parsedData.activities ? parsedData.activities.length : 'No activities array');\n        console.log('Activities:', parsedData.activities);\n        return parsedData;\n      } else {\n        console.error('No JSON found in response text');\n        throw new Error('No JSON found in response');\n      }\n    } catch (parseError) {\n      console.error('Failed to parse JSON response:', parseError);\n      console.error('Raw response text:', responseText);\n      throw new Error('Failed to parse API response as JSON');\n    }\n    \n    } catch (error) {\n    console.error('Error calling Gemini API:', error);\n    \n    // Handle specific error types\n    if (error.message === 'LLM_SERVICE_UNAVAILABLE') {\n      throw new Error('LLM_SERVICE_UNAVAILABLE');\n    } else if (error.message === 'LLM_RATE_LIMIT_EXCEEDED') {\n      throw new Error('LLM_RATE_LIMIT_EXCEEDED');\n    } else if (error.message === 'LLM_API_KEY_INVALID') {\n      throw new Error('LLM_API_KEY_INVALID');\n    } else if (error.message.includes('timeout') || error.message.includes('Request timeout')) {\n      throw new Error('REQUEST_TIMEOUT');\n    } else {\n      // For other errors, fall back to mock data\n      console.warn('Falling back to mock data due to API error:', error.message);\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    }\n  }\n  \n  } catch (error) {\n    // Handle specific error types - show alert but still provide mock data\n    if (error.message === 'LLM_SERVICE_UNAVAILABLE') {\n      console.warn('LLM service unavailable, using mock data');\n      showErrorAlert('LLM_SERVICE_UNAVAILABLE');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else if (error.message === 'LLM_RATE_LIMIT_EXCEEDED') {\n      console.warn('Rate limit exceeded, using mock data');\n      showErrorAlert('LLM_RATE_LIMIT_EXCEEDED');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else if (error.message === 'LLM_API_KEY_INVALID') {\n      console.warn('API key invalid, using mock data');\n      showErrorAlert('LLM_API_KEY_INVALID');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else if (error.message === 'REQUEST_TIMEOUT') {\n      console.warn('Request timeout, using mock data');\n      showErrorAlert('REQUEST_TIMEOUT');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    } else {\n      // For other errors, fall back to mock data\n      console.warn('Falling back to mock data due to unexpected error:', error.message);\n      showErrorAlert('GENERAL_ERROR');\n      return generateMockResponse(place, motive, budget, currency, numberOfMembers, numberOfDays);\n    }\n  }\n};\n\n// Mock response generator for development/testing\nconst generateMockResponse = (place, motive, budget, currency, numberOfMembers, numberOfDays) => {\n  const mockActivities = [\n    {\n      id: '1',\n      name: 'City Walking Tour',\n      place: `${place} Historic Center`,\n      description: 'Explore the historic landmarks and cultural sites',\n      costPerPerson: 25,\n      category: 'activities',\n      duration: '3 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '2',\n      name: 'Museum Visit',\n      place: 'National Museum',\n      description: 'Learn about local history and culture',\n      costPerPerson: 15,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '3',\n      name: 'Scenic Viewpoint',\n      place: 'Mountain Lookout',\n      description: 'Enjoy panoramic views of the city',\n      costPerPerson: 10,\n      category: 'activities',\n      duration: '1 hour',\n      bestTime: 'evening'\n    },\n    {\n      id: '4',\n      name: 'Art Gallery Tour',\n      place: 'Modern Art Gallery',\n      description: 'Discover contemporary local and international art',\n      costPerPerson: 20,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '5',\n      name: 'Cultural Workshop',\n      place: 'Art Center',\n      description: 'Learn traditional crafts and techniques',\n      costPerPerson: 45,\n      category: 'activities',\n      duration: '3 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '6',\n      name: 'Nature Hike',\n      place: 'National Park',\n      description: 'Explore natural trails and observe local wildlife',\n      costPerPerson: 30,\n      category: 'activities',\n      duration: '4 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '7',\n      name: 'Boat Tour',\n      place: 'City Harbor',\n      description: 'Scenic boat ride with city skyline views',\n      costPerPerson: 35,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '8',\n      name: 'Cooking Class',\n      place: 'Culinary School',\n      description: 'Learn to prepare authentic local dishes',\n      costPerPerson: 60,\n      category: 'activities',\n      duration: '3 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '9',\n      name: 'Photography Tour',\n      place: 'Historic District',\n      description: 'Capture the best shots with a professional guide',\n      costPerPerson: 40,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'evening'\n    },\n    {\n      id: '10',\n      name: 'Wine Tasting',\n      place: 'Local Winery',\n      description: 'Sample regional wines and learn about local viticulture',\n      costPerPerson: 50,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '11',\n      name: 'Architecture Tour',\n      place: 'Downtown District',\n      description: 'Explore iconic buildings and architectural styles',\n      costPerPerson: 25,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '12',\n      name: 'Music Performance',\n      place: 'Concert Hall',\n      description: 'Attend a classical or traditional music concert',\n      costPerPerson: 40,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'evening'\n    },\n    {\n      id: '13',\n      name: 'Market Tour',\n      place: 'Local Market',\n      description: 'Explore local markets and taste regional specialties',\n      costPerPerson: 20,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '14',\n      name: 'Bike Tour',\n      place: 'City Streets',\n      description: 'Cycling tour through scenic neighborhoods',\n      costPerPerson: 30,\n      category: 'activities',\n      duration: '3 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '15',\n      name: 'Theater Show',\n      place: 'Historic Theater',\n      description: 'Watch a local theater production or musical',\n      costPerPerson: 35,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'evening'\n    },\n    {\n      id: '16',\n      name: 'Garden Tour',\n      place: 'Botanical Gardens',\n      description: 'Explore beautiful gardens and exotic plants',\n      costPerPerson: 15,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '17',\n      name: 'Nightlife Tour',\n      place: 'Entertainment District',\n      description: 'Experience the local nightlife and bars',\n      costPerPerson: 45,\n      category: 'activities',\n      duration: '3 hours',\n      bestTime: 'evening'\n    },\n    {\n      id: '18',\n      name: 'Adventure Park',\n      place: 'Outdoor Adventure Center',\n      description: 'Try zip-lining, rock climbing, and outdoor activities',\n      costPerPerson: 55,\n      category: 'activities',\n      duration: '4 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '19',\n      name: 'Historical Site Visit',\n      place: 'Ancient Ruins',\n      description: 'Explore historical monuments and archaeological sites',\n      costPerPerson: 20,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '20',\n      name: 'Spa Experience',\n      place: 'Luxury Spa',\n      description: 'Relax with traditional treatments and massages',\n      costPerPerson: 80,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '21',\n      name: 'Food Market Tour',\n      place: 'Local Market',\n      description: 'Explore local cuisine and food culture',\n      costPerPerson: 35,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'morning'\n    },\n    {\n      id: '22',\n      name: 'Photography Walk',\n      place: 'Scenic Routes',\n      description: 'Capture the best photo spots with a guide',\n      costPerPerson: 40,\n      category: 'activities',\n      duration: '3 hours',\n      bestTime: 'evening'\n    },\n    {\n      id: '23',\n      name: 'Local Festival',\n      place: 'Town Square',\n      description: 'Experience traditional celebrations and events',\n      costPerPerson: 15,\n      category: 'activities',\n      duration: '4 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '24',\n      name: 'Wine Tasting',\n      place: 'Vineyard',\n      description: 'Sample local wines and learn about production',\n      costPerPerson: 60,\n      category: 'activities',\n      duration: '2 hours',\n      bestTime: 'afternoon'\n    },\n    {\n      id: '25',\n      name: 'Hiking Trail',\n      place: 'Nature Reserve',\n      description: 'Explore scenic hiking paths and nature',\n      costPerPerson: 25,\n      category: 'activities',\n      duration: '4 hours',\n      bestTime: 'morning'\n    }\n  ];\n\n  const budgetAmount = parseInt(budget) || 1000;\n  const budgetBreakdown = {\n    food: {\n      total: Math.floor(budgetAmount * 0.3),\n      items: [\n        { name: \"Local Restaurant\", place: \"Downtown\", costPerPerson: Math.floor(budgetAmount * 0.15), description: \"Traditional local cuisine\" },\n        { name: \"Street Food\", place: \"Market Area\", costPerPerson: Math.floor(budgetAmount * 0.1), description: \"Authentic street food experience\" },\n        { name: \"Café\", place: \"City Center\", costPerPerson: Math.floor(budgetAmount * 0.05), description: \"Coffee and light meals\" }\n      ]\n    },\n    travel: {\n      total: Math.floor(budgetAmount * 0.25),\n      items: [\n        { name: \"Airport Transfer\", place: \"Airport to Hotel\", costPerPerson: Math.floor(budgetAmount * 0.1), description: \"Taxi or shuttle service\" },\n        { name: \"Local Transport\", place: \"City\", costPerPerson: Math.floor(budgetAmount * 0.1), description: \"Public transport and taxis\" },\n        { name: \"Intercity Travel\", place: \"Between cities\", costPerPerson: Math.floor(budgetAmount * 0.05), description: \"Train or bus tickets\" }\n      ]\n    },\n    accommodation: {\n      total: Math.floor(budgetAmount * 0.2),\n      items: [\n        { name: \"Hotel\", place: \"City Center\", costPerPerson: Math.floor(budgetAmount * 0.2), description: \"Comfortable accommodation\" }\n      ]\n    },\n    other: {\n      total: Math.floor(budgetAmount * 0.05),\n      items: [\n        { name: \"Souvenirs\", place: \"Local Shops\", costPerPerson: Math.floor(budgetAmount * 0.03), description: \"Memorabilia and gifts\" },\n        { name: \"Miscellaneous\", place: \"Various\", costPerPerson: Math.floor(budgetAmount * 0.02), description: \"Unexpected expenses\" }\n      ]\n    }\n  };\n\n  // Adjust activity prices based on currency (rough conversion for demo)\n  const getCurrencyMultiplier = (curr) => {\n    const multipliers = {\n      'USD': 1.0,\n      'EUR': 0.85,\n      'GBP': 0.75,\n      'JPY': 110,\n      'INR': 75,\n      'CAD': 1.25,\n      'AUD': 1.35\n    };\n    return multipliers[curr] || 1.0;\n  };\n\n  const currencyMultiplier = getCurrencyMultiplier(currency);\n  const adjustedActivities = mockActivities.map(activity => ({\n    ...activity,\n    costPerPerson: Math.round(activity.costPerPerson * currencyMultiplier)\n  }));\n\n  // Generate days based on numberOfDays\n  const generateDays = () => {\n    const days = [];\n    for (let i = 1; i <= numberOfDays; i++) {\n      const date = new Date(Date.now() + (i - 1) * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n      const activitiesPerDay = Math.ceil(adjustedActivities.length / numberOfDays);\n      const startIndex = (i - 1) * activitiesPerDay;\n      const endIndex = Math.min(startIndex + activitiesPerDay, adjustedActivities.length);\n      \n      days.push({\n        day: i,\n        date: date,\n        activities: adjustedActivities.slice(startIndex, endIndex).map(activity => ({\n          time: '09:00',\n          activity: activity.name,\n          place: activity.place,\n          description: activity.description,\n          costPerPerson: activity.costPerPerson,\n          category: activity.category\n        }))\n      });\n    }\n    return days;\n  };\n\n  return {\n    itinerary: {\n      days: generateDays()\n    },\n    activities: adjustedActivities,\n    budgetBreakdown,\n    totalEstimatedCost: budgetAmount\n  };\n};\n"],"mappings":"AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,IAAI,0BAA0B;AACzF,MAAMC,cAAc,GAAG,0FAA0F;;AAEjH;AACA,MAAMC,cAAc,GAAIC,SAAS,IAAK;EACpC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,QAAQD,SAAS;MACf,KAAK,yBAAyB;QAC5BE,KAAK,CAAC,kMAAkM,CAAC;QACzM;MACF,KAAK,yBAAyB;QAC5BA,KAAK,CAAC,0KAA0K,CAAC;QACjL;MACF,KAAK,qBAAqB;QACxBA,KAAK,CAAC,oKAAoK,CAAC;QAC3K;MACF,KAAK,iBAAiB;QACpBA,KAAK,CAAC,8KAA8K,CAAC;QACrL;MACF;QACEA,KAAK,CAAC,+KAA+K,CAAC;IAC1L;EACF;AACF,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,UAAU,GAAG,CAAC,EAAEC,SAAS,GAAG,IAAI,KAAK;EACvE,KAAK,IAAIC,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGF,UAAU,EAAEE,OAAO,EAAE,EAAE;IACrD,IAAI;MACF,OAAO,MAAMH,EAAE,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACC,OAAO,KAAK,yBAAyB,IAAIF,OAAO,GAAGF,UAAU,GAAG,CAAC,EAAE;QAC3E,MAAMK,KAAK,GAAGJ,SAAS,GAAGK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,OAAO,CAAC;QAC9CM,OAAO,CAACC,GAAG,CAAC,oCAAoCJ,KAAK,kBAAkBH,OAAO,GAAG,CAAC,IAAIF,UAAU,GAAG,CAAC;QACpG,MAAM,IAAIU,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEN,KAAK,CAAC,CAAC;QACxD;MACF;MACA,MAAMF,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,MAAMU,cAAc,GAAGA,CAAA,KAAM;EAC3B,IAAI,CAACxB,cAAc,IAAIA,cAAc,KAAK,0BAA0B,EAAE;IACpE,MAAM,IAAIyB,KAAK,CAAC,qBAAqB,CAAC;EACxC;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAMC,oBAAoB,GAAIC,SAAS,IAAK;EAC1C,OAAO,IAAIN,OAAO,CAAC,CAACO,CAAC,EAAEC,MAAM,KAAK;IAChCN,UAAU,CAAC,MAAMM,MAAM,CAAC,IAAIJ,KAAK,CAAC,iBAAiB,CAAC,CAAC,EAAEE,SAAS,CAAC;EACnE,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMG,cAAc,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,EAAEL,SAAS,GAAG,KAAK,KAAK;EAChE,MAAMM,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;EACxC,MAAMC,SAAS,GAAGZ,UAAU,CAAC,MAAMU,UAAU,CAACG,KAAK,CAAC,CAAC,EAAET,SAAS,CAAC;EAEjE,IAAI;IACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;MAChC,GAAGC,OAAO;MACVO,MAAM,EAAEN,UAAU,CAACM;IACrB,CAAC,CAAC;IACFC,YAAY,CAACL,SAAS,CAAC;IACvB,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOvB,KAAK,EAAE;IACd0B,YAAY,CAACL,SAAS,CAAC;IACvB,IAAIrB,KAAK,CAAC2B,IAAI,KAAK,YAAY,EAAE;MAC/B,MAAM,IAAIhB,KAAK,CAAC,gDAAgD,CAAC;IACnE;IACA,MAAMX,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF;IACAlB,cAAc,CAAC,CAAC;IAEhB,MAAMa,QAAQ,GAAG,MAAMP,cAAc,CAAC,GAAG1B,cAAc,QAAQJ,cAAc,EAAE,EAAE;MAC/E2C,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;YACNC,IAAI,EAAE;UACR,CAAC;QACH,CAAC,CAAC;QACFC,gBAAgB,EAAE;UAChBC,WAAW,EAAE,GAAG;UAChBC,eAAe,EAAE;QACnB;MACF,CAAC;IACH,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEXlC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEiB,QAAQ,CAACiB,MAAM,CAAC;IACzD,MAAMC,IAAI,GAAG,MAAMlB,QAAQ,CAACmB,IAAI,CAAC,CAAC;IAClCrC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE0B,IAAI,CAACC,SAAS,CAACQ,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACrE,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOzC,KAAK,EAAE;IACdK,OAAO,CAACL,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAM2C,iBAAiB,GAAG,MAAOC,UAAU,IAAK;EACrD,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,iBAAiB;IAAEC,eAAe;IAAEC;EAAa,CAAC,GAAGP,UAAU;EAExG,IAAI;IACF;IACAlC,cAAc,CAAC,CAAC;IAElB,MAAM0C,MAAM,GAAG,iCAAiCF,eAAe,uBAAuBL,KAAK,QAAQM,YAAY,oBAAoBL,MAAM,aAAaC,MAAM,IAAIC,QAAQ,GAAGC,iBAAiB,GAAG,gBAAgB,GAAG,gBAAgB;AACpO;AACA,gCAAgCJ,KAAK;AACrC;AACA;AACA,kBAAkBG,QAAQ;AAC1B,oBAAoBF,MAAM,mBAAmBD,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;IAEA;IACA,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAM9B,QAAQ,GAAG,MAAMP,cAAc,CAAC,GAAG1B,cAAc,QAAQJ,cAAc,EAAE,EAAE;QAC/E2C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,CAAC;cACNC,IAAI,EAAEgB;YACR,CAAC;UACH,CAAC,CAAC;UACFf,gBAAgB,EAAE;YAChBC,WAAW,EAAE,GAAG;YAAS;YACzBgB,IAAI,EAAE,EAAE;YAAgB;YACxBC,IAAI,EAAE,GAAG;YAAe;YACxBhB,eAAe,EAAE,IAAI;YAAG;YACxBiB,cAAc,EAAE,CAAC,CAAO;UAC1B;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACjC,QAAQ,CAACkC,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMnC,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAACiB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACzDtD,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAE;UACzCwC,MAAM,EAAEjB,QAAQ,CAACiB,MAAM;UACvBoB,UAAU,EAAErC,QAAQ,CAACqC,UAAU;UAC/B5D,KAAK,EAAE0D;QACT,CAAC,CAAC;;QAEF;QACA,IAAInC,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAI7B,KAAK,CAAC,yBAAyB,CAAC;QAC5C,CAAC,MAAM,IAAIY,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;UAClC,MAAM,IAAI7B,KAAK,CAAC,yBAAyB,CAAC;QAC5C,CAAC,MAAM,IAAIY,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;UAClC,MAAM,IAAI7B,KAAK,CAAC,qBAAqB,CAAC;QACxC,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CAAC,uBAAuBY,QAAQ,CAACiB,MAAM,IAAIjB,QAAQ,CAACqC,UAAU,EAAE,CAAC;QAClF;MACF;MAEA,MAAMnB,IAAI,GAAG,MAAMlB,QAAQ,CAACmB,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAMA,IAAI,GAAG,MAAM9C,gBAAgB,CAAC0D,OAAO,CAAC;;MAE5C;MACAhD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE0B,IAAI,CAACC,SAAS,CAACQ,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;MAEhE;MACA,IAAIA,IAAI,CAACzC,KAAK,EAAE;QACdK,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEyC,IAAI,CAACzC,KAAK,CAAC;QACnD,MAAM,IAAIW,KAAK,CAAC,cAAc8B,IAAI,CAACzC,KAAK,CAACC,OAAO,IAAI,eAAe,EAAE,CAAC;MACxE;MAEA,IAAI,CAACwC,IAAI,CAACoB,UAAU,IAAI,CAACpB,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,EAAE;QAC3CxD,OAAO,CAACL,KAAK,CAAC,4BAA4B,EAAEyC,IAAI,CAAC;QACjD,MAAM,IAAI9B,KAAK,CAAC,yDAAyD,CAAC;MAC5E;;MAEA;MACA,IAAI8B,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACC,YAAY,KAAK,YAAY,EAAE;QACpDzD,OAAO,CAAC0D,IAAI,CAAC,0EAA0E,CAAC;QACxF,OAAOC,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;MAC7F;;MAEA;MACA,IAAIV,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACC,YAAY,IAAIrB,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACC,YAAY,KAAK,MAAM,EAAE;QACjFzD,OAAO,CAAC0D,IAAI,CAAC,kCAAkCtB,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACC,YAAY,4BAA4B,CAAC;QAC3G,OAAOE,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;MAC7F;MAEA,IAAI,CAACV,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACI,OAAO,EAAE;QAC/B5D,OAAO,CAACL,KAAK,CAAC,gCAAgC,EAAEyC,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAAC;QACnE,MAAM,IAAIlD,KAAK,CAAC,sDAAsD,CAAC;MACzE;MAEA,IAAI,CAAC8B,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC9B,KAAK,IAAI,CAACM,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC9B,KAAK,CAAC,CAAC,CAAC,EAAE;QAC7E9B,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEyC,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC;QACjE,MAAM,IAAItD,KAAK,CAAC,oDAAoD,CAAC;MACvE;MAEA,MAAMuD,YAAY,GAAGzB,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC9B,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;MAE7D/B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE4D,YAAY,CAAC;MAC3C7D,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE4D,YAAY,CAACC,MAAM,CAAC;;MAEzD;MACA,IAAI;QACF,MAAMC,SAAS,GAAGF,YAAY,CAACG,KAAK,CAAC,aAAa,CAAC;QACnD,IAAID,SAAS,EAAE;UACb,MAAME,UAAU,GAAGtC,IAAI,CAACuC,KAAK,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;UAC3C/D,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChDD,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEgE,UAAU,CAACE,UAAU,GAAGF,UAAU,CAACE,UAAU,CAACL,MAAM,GAAG,qBAAqB,CAAC;UAC9H9D,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEgE,UAAU,CAACE,UAAU,CAAC;UACjD,OAAOF,UAAU;QACnB,CAAC,MAAM;UACLjE,OAAO,CAACL,KAAK,CAAC,gCAAgC,CAAC;UAC/C,MAAM,IAAIW,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAO8D,UAAU,EAAE;QACnBpE,OAAO,CAACL,KAAK,CAAC,gCAAgC,EAAEyE,UAAU,CAAC;QAC3DpE,OAAO,CAACL,KAAK,CAAC,oBAAoB,EAAEkE,YAAY,CAAC;QACjD,MAAM,IAAIvD,KAAK,CAAC,sCAAsC,CAAC;MACzD;IAEA,CAAC,CAAC,OAAOX,KAAK,EAAE;MAChBK,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;;MAEjD;MACA,IAAIA,KAAK,CAACC,OAAO,KAAK,yBAAyB,EAAE;QAC/C,MAAM,IAAIU,KAAK,CAAC,yBAAyB,CAAC;MAC5C,CAAC,MAAM,IAAIX,KAAK,CAACC,OAAO,KAAK,yBAAyB,EAAE;QACtD,MAAM,IAAIU,KAAK,CAAC,yBAAyB,CAAC;MAC5C,CAAC,MAAM,IAAIX,KAAK,CAACC,OAAO,KAAK,qBAAqB,EAAE;QAClD,MAAM,IAAIU,KAAK,CAAC,qBAAqB,CAAC;MACxC,CAAC,MAAM,IAAIX,KAAK,CAACC,OAAO,CAACyE,QAAQ,CAAC,SAAS,CAAC,IAAI1E,KAAK,CAACC,OAAO,CAACyE,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QACzF,MAAM,IAAI/D,KAAK,CAAC,iBAAiB,CAAC;MACpC,CAAC,MAAM;QACL;QACAN,OAAO,CAAC0D,IAAI,CAAC,6CAA6C,EAAE/D,KAAK,CAACC,OAAO,CAAC;QAC1E,OAAO+D,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;MAC7F;IACF;EAEA,CAAC,CAAC,OAAOnD,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACC,OAAO,KAAK,yBAAyB,EAAE;MAC/CI,OAAO,CAAC0D,IAAI,CAAC,0CAA0C,CAAC;MACxDxE,cAAc,CAAC,yBAAyB,CAAC;MACzC,OAAOyE,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;IAC7F,CAAC,MAAM,IAAInD,KAAK,CAACC,OAAO,KAAK,yBAAyB,EAAE;MACtDI,OAAO,CAAC0D,IAAI,CAAC,sCAAsC,CAAC;MACpDxE,cAAc,CAAC,yBAAyB,CAAC;MACzC,OAAOyE,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;IAC7F,CAAC,MAAM,IAAInD,KAAK,CAACC,OAAO,KAAK,qBAAqB,EAAE;MAClDI,OAAO,CAAC0D,IAAI,CAAC,kCAAkC,CAAC;MAChDxE,cAAc,CAAC,qBAAqB,CAAC;MACrC,OAAOyE,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;IAC7F,CAAC,MAAM,IAAInD,KAAK,CAACC,OAAO,KAAK,iBAAiB,EAAE;MAC9CI,OAAO,CAAC0D,IAAI,CAAC,kCAAkC,CAAC;MAChDxE,cAAc,CAAC,iBAAiB,CAAC;MACjC,OAAOyE,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;IAC7F,CAAC,MAAM;MACL;MACA9C,OAAO,CAAC0D,IAAI,CAAC,oDAAoD,EAAE/D,KAAK,CAACC,OAAO,CAAC;MACjFV,cAAc,CAAC,eAAe,CAAC;MAC/B,OAAOyE,oBAAoB,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,CAAC;IAC7F;EACF;AACF,CAAC;;AAED;AACA,MAAMa,oBAAoB,GAAGA,CAACnB,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEE,eAAe,EAAEC,YAAY,KAAK;EAC/F,MAAMwB,cAAc,GAAG,CACrB;IACEC,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,mBAAmB;IACzBkB,KAAK,EAAE,GAAGA,KAAK,kBAAkB;IACjCgC,WAAW,EAAE,mDAAmD;IAChEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,cAAc;IACpBkB,KAAK,EAAE,iBAAiB;IACxBgC,WAAW,EAAE,uCAAuC;IACpDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,kBAAkB;IACxBkB,KAAK,EAAE,kBAAkB;IACzBgC,WAAW,EAAE,mCAAmC;IAChDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,kBAAkB;IACxBkB,KAAK,EAAE,oBAAoB;IAC3BgC,WAAW,EAAE,mDAAmD;IAChEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,mBAAmB;IACzBkB,KAAK,EAAE,YAAY;IACnBgC,WAAW,EAAE,yCAAyC;IACtDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,aAAa;IACnBkB,KAAK,EAAE,eAAe;IACtBgC,WAAW,EAAE,mDAAmD;IAChEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,WAAW;IACjBkB,KAAK,EAAE,aAAa;IACpBgC,WAAW,EAAE,0CAA0C;IACvDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,eAAe;IACrBkB,KAAK,EAAE,iBAAiB;IACxBgC,WAAW,EAAE,yCAAyC;IACtDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPjD,IAAI,EAAE,kBAAkB;IACxBkB,KAAK,EAAE,mBAAmB;IAC1BgC,WAAW,EAAE,kDAAkD;IAC/DC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,cAAc;IACpBkB,KAAK,EAAE,cAAc;IACrBgC,WAAW,EAAE,yDAAyD;IACtEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,mBAAmB;IACzBkB,KAAK,EAAE,mBAAmB;IAC1BgC,WAAW,EAAE,mDAAmD;IAChEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,mBAAmB;IACzBkB,KAAK,EAAE,cAAc;IACrBgC,WAAW,EAAE,iDAAiD;IAC9DC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,aAAa;IACnBkB,KAAK,EAAE,cAAc;IACrBgC,WAAW,EAAE,sDAAsD;IACnEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,WAAW;IACjBkB,KAAK,EAAE,cAAc;IACrBgC,WAAW,EAAE,2CAA2C;IACxDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,cAAc;IACpBkB,KAAK,EAAE,kBAAkB;IACzBgC,WAAW,EAAE,6CAA6C;IAC1DC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,aAAa;IACnBkB,KAAK,EAAE,mBAAmB;IAC1BgC,WAAW,EAAE,6CAA6C;IAC1DC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,gBAAgB;IACtBkB,KAAK,EAAE,wBAAwB;IAC/BgC,WAAW,EAAE,yCAAyC;IACtDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,gBAAgB;IACtBkB,KAAK,EAAE,0BAA0B;IACjCgC,WAAW,EAAE,uDAAuD;IACpEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,uBAAuB;IAC7BkB,KAAK,EAAE,eAAe;IACtBgC,WAAW,EAAE,uDAAuD;IACpEC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,gBAAgB;IACtBkB,KAAK,EAAE,YAAY;IACnBgC,WAAW,EAAE,gDAAgD;IAC7DC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,kBAAkB;IACxBkB,KAAK,EAAE,cAAc;IACrBgC,WAAW,EAAE,wCAAwC;IACrDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,kBAAkB;IACxBkB,KAAK,EAAE,eAAe;IACtBgC,WAAW,EAAE,2CAA2C;IACxDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,gBAAgB;IACtBkB,KAAK,EAAE,aAAa;IACpBgC,WAAW,EAAE,gDAAgD;IAC7DC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,cAAc;IACpBkB,KAAK,EAAE,UAAU;IACjBgC,WAAW,EAAE,+CAA+C;IAC5DC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,EAAE,EAAE,IAAI;IACRjD,IAAI,EAAE,cAAc;IACpBkB,KAAK,EAAE,gBAAgB;IACvBgC,WAAW,EAAE,wCAAwC;IACrDC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,YAAY;IACtBC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,MAAMC,YAAY,GAAGC,QAAQ,CAACpC,MAAM,CAAC,IAAI,IAAI;EAC7C,MAAMqC,eAAe,GAAG;IACtBC,IAAI,EAAE;MACJC,KAAK,EAAEnF,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,GAAG,CAAC;MACrCM,KAAK,EAAE,CACL;QAAE7D,IAAI,EAAE,kBAAkB;QAAEkB,KAAK,EAAE,UAAU;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,IAAI,CAAC;QAAEL,WAAW,EAAE;MAA4B,CAAC,EACzI;QAAElD,IAAI,EAAE,aAAa;QAAEkB,KAAK,EAAE,aAAa;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,GAAG,CAAC;QAAEL,WAAW,EAAE;MAAmC,CAAC,EAC7I;QAAElD,IAAI,EAAE,MAAM;QAAEkB,KAAK,EAAE,aAAa;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,IAAI,CAAC;QAAEL,WAAW,EAAE;MAAyB,CAAC;IAEjI,CAAC;IACDY,MAAM,EAAE;MACNH,KAAK,EAAEnF,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,IAAI,CAAC;MACtCM,KAAK,EAAE,CACL;QAAE7D,IAAI,EAAE,kBAAkB;QAAEkB,KAAK,EAAE,kBAAkB;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,GAAG,CAAC;QAAEL,WAAW,EAAE;MAA0B,CAAC,EAC9I;QAAElD,IAAI,EAAE,iBAAiB;QAAEkB,KAAK,EAAE,MAAM;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,GAAG,CAAC;QAAEL,WAAW,EAAE;MAA6B,CAAC,EACpI;QAAElD,IAAI,EAAE,kBAAkB;QAAEkB,KAAK,EAAE,gBAAgB;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,IAAI,CAAC;QAAEL,WAAW,EAAE;MAAuB,CAAC;IAE9I,CAAC;IACDa,aAAa,EAAE;MACbJ,KAAK,EAAEnF,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,GAAG,CAAC;MACrCM,KAAK,EAAE,CACL;QAAE7D,IAAI,EAAE,OAAO;QAAEkB,KAAK,EAAE,aAAa;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,GAAG,CAAC;QAAEL,WAAW,EAAE;MAA4B,CAAC;IAEpI,CAAC;IACDc,KAAK,EAAE;MACLL,KAAK,EAAEnF,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,IAAI,CAAC;MACtCM,KAAK,EAAE,CACL;QAAE7D,IAAI,EAAE,WAAW;QAAEkB,KAAK,EAAE,aAAa;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,IAAI,CAAC;QAAEL,WAAW,EAAE;MAAwB,CAAC,EACjI;QAAElD,IAAI,EAAE,eAAe;QAAEkB,KAAK,EAAE,SAAS;QAAEiC,aAAa,EAAE3E,IAAI,CAACoF,KAAK,CAACL,YAAY,GAAG,IAAI,CAAC;QAAEL,WAAW,EAAE;MAAsB,CAAC;IAEnI;EACF,CAAC;;EAED;EACA,MAAMe,qBAAqB,GAAIC,IAAI,IAAK;IACtC,MAAMC,WAAW,GAAG;MAClB,KAAK,EAAE,GAAG;MACV,KAAK,EAAE,IAAI;MACX,KAAK,EAAE,IAAI;MACX,KAAK,EAAE,GAAG;MACV,KAAK,EAAE,EAAE;MACT,KAAK,EAAE,IAAI;MACX,KAAK,EAAE;IACT,CAAC;IACD,OAAOA,WAAW,CAACD,IAAI,CAAC,IAAI,GAAG;EACjC,CAAC;EAED,MAAME,kBAAkB,GAAGH,qBAAqB,CAAC5C,QAAQ,CAAC;EAC1D,MAAMgD,kBAAkB,GAAGrB,cAAc,CAACsB,GAAG,CAACC,QAAQ,KAAK;IACzD,GAAGA,QAAQ;IACXpB,aAAa,EAAE3E,IAAI,CAACgG,KAAK,CAACD,QAAQ,CAACpB,aAAa,GAAGiB,kBAAkB;EACvE,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAInD,YAAY,EAAEmD,CAAC,EAAE,EAAE;MACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7F,MAAMC,gBAAgB,GAAGzG,IAAI,CAAC0G,IAAI,CAACb,kBAAkB,CAAC7B,MAAM,GAAGhB,YAAY,CAAC;MAC5E,MAAM2D,UAAU,GAAG,CAACR,CAAC,GAAG,CAAC,IAAIM,gBAAgB;MAC7C,MAAMG,QAAQ,GAAG5G,IAAI,CAAC6G,GAAG,CAACF,UAAU,GAAGF,gBAAgB,EAAEZ,kBAAkB,CAAC7B,MAAM,CAAC;MAEnFkC,IAAI,CAACY,IAAI,CAAC;QACRC,GAAG,EAAEZ,CAAC;QACNC,IAAI,EAAEA,IAAI;QACV/B,UAAU,EAAEwB,kBAAkB,CAACmB,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAACd,GAAG,CAACC,QAAQ,KAAK;UAC1EkB,IAAI,EAAE,OAAO;UACblB,QAAQ,EAAEA,QAAQ,CAACvE,IAAI;UACvBkB,KAAK,EAAEqD,QAAQ,CAACrD,KAAK;UACrBgC,WAAW,EAAEqB,QAAQ,CAACrB,WAAW;UACjCC,aAAa,EAAEoB,QAAQ,CAACpB,aAAa;UACrCC,QAAQ,EAAEmB,QAAQ,CAACnB;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACA,OAAOsB,IAAI;EACb,CAAC;EAED,OAAO;IACLgB,SAAS,EAAE;MACThB,IAAI,EAAED,YAAY,CAAC;IACrB,CAAC;IACD5B,UAAU,EAAEwB,kBAAkB;IAC9BZ,eAAe;IACfkC,kBAAkB,EAAEpC;EACtB,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}